--- a/memory_manager.py
+++ b/sandbox/memory_manager.py
@@ -165,6 +165,65 @@
         except Exception as e:
             logging.error(f"Could not update metadata in ChromaDB for session '{self.session_name}': {e}")
 
+    def get_unsummarized_turns(self):
+        """
+        Retrieves all turns that have not yet been included in a summary.
+        """
+        all_turns = self.get_all_turns()
+        unsummarized = [
+            turn for turn in all_turns
+            if not turn['metadata'].get('is_summarized') and turn['metadata'].get('role') in ['user', 'model']
+        ]
+        return unsummarized
+
+    def add_summary_and_update_originals(self, summary_text, original_turn_ids):
+        """
+        Adds a summary document to ChromaDB and updates the metadata of the
+        original turns to mark them as summarized.
+        """
+        if not self.collection:
+            logging.error("Cannot add summary: collection is not initialized.")
+            return
+
+        # 1. Add the summary document
+        summary_id = str(uuid.uuid4())
+        summary_meta = {'role': 'summary', 'timestamp': time.time(), 'is_summarized': False}
+        try:
+            self.collection.add(
+                documents=[summary_text],
+                metadatas=[summary_meta],
+                ids=[summary_id]
+            )
+            logging.info(f"Added summary document to ChromaDB for session '{self.session_name}'.")
+        except Exception as e:
+            logging.error(f"Could not add summary document to ChromaDB: {e}")
+            return
+
+        # 2. Update the original documents
+        if original_turn_ids:
+            existing_docs = self.collection.get(ids=original_turn_ids, include=['metadatas'])
+            updated_metadatas = []
+            if existing_docs and existing_docs['metadatas']:
+                for meta in existing_docs['metadatas']:
+                    meta['is_summarized'] = True
+                    updated_metadatas.append(meta)
+                self.update_turns_metadata(ids=original_turn_ids, metadatas=updated_metadatas)
+
+    def get_recent_summaries(self, n_results=3):
+        """
+        Retrieves the most recent summary documents from the collection.
+        """
+        if not self.collection or self.collection.count() == 0:
+            return []
+        try:
+            summaries = self.collection.get(where={"role": "summary"}, include=["documents", "metadatas"])
+            if not summaries or not summaries.get('ids'): return []
+            
+            summaries_sorted = sorted(summaries['documents'], key=lambda k: k['metadata']['timestamp'], reverse=True)
+            return [s['document'] for s in summaries_sorted[:n_results]]
+        except Exception as e:
+            logging.error(f"Could not retrieve summaries from ChromaDB: {e}")
+            return []
+
     # --- NEW: Function to get all turns for summarization ---
     def get_all_turns(self):
         \"\"\"