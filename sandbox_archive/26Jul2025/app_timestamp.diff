--- a/app.py
+++ b/sandbox/app_proposed.py
@@ -265,12 +265,12 @@
     session_name = chat_sessions.get(session_id, {}).get('name')
     audit_log.log_event("Socket.IO Event Received: start_task", session_id=session_id, session_name=session_name, source="Client", destination="Server", observers=["Orchestrator"], details=data)
     prompt = data.get('prompt')
+    # Prepend timestamp to the user's prompt before processing
+    timestamp = datetime.now().strftime('%Y-%m-%d %H:%M:%S')
+    timestamped_prompt = f"[{timestamp}] {prompt}"
     session_data = chat_sessions.get(session_id)
-    if prompt and session_data:
-        socketio.start_background_task(execute_reasoning_loop, socketio, session_data, prompt, session_id, chat_sessions, model, api_stats)
+    if timestamped_prompt and session_data:
+        socketio.start_background_task(execute_reasoning_loop, socketio, session_data, timestamped_prompt, session_id, chat_sessions, model, api_stats)
     elif not session_data:
         socketio.emit('log_message', {'type': 'error', 'data': 'No active AI session. Please refresh.'}, to=request.sid)