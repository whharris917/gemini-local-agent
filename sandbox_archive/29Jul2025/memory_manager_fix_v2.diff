--- a/memory_manager.py
+++ b/sandbox/memory_manager.py
@@ -3,6 +3,7 @@
 import uuid
 import os
 import time
+from vertexai.generative_models import Content
 import chromadb.utils.embedding_functions as embedding_functions
 
 # This script will be in the project root. The sandbox is a subdirectory.
@@ -108,10 +109,10 @@
             # Reverse again to get chronological order
             recent_turns.reverse()
 
-            self.conversational_buffer = [
-                {"role": turn['metadata']['role'], "parts": [{'text': turn['document']}]}
+            # --- MODIFIED: Create Content objects directly ---
+            self.conversational_buffer = [
+                Content(role=turn['metadata']['role'], parts=[{'text': turn['document']}])
                 for turn in recent_turns
             ]
             logging.info(f"Repopulated buffer with {len(self.conversational_buffer)} turns from ChromaDB for session '{self.session_name}'.")
 
@@ -125,7 +126,8 @@
         Role is 'user' or 'model'.
         Metadata is an optional dictionary for storing additional info like summaries.
         """
-        turn = {"role": role, "parts": [{'text': content}]}
+        # Create a Content object for the buffer
+        turn = Content(role=role, parts=[{'text': content}])
         self.conversational_buffer.append(turn)
         if len(self.conversational_buffer) > self.max_buffer_size:
             self.conversational_buffer.pop(0)