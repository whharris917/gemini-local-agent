--- a/index.html
+++ b/sandbox/index.html
@@ -148,6 +148,7 @@
                  <div class="flex space-x-2"> <input type="text" id="save-session-name" class="w-full rounded-md p-2 text-xs focus:outline-none focus:ring-2 focus:ring-blue-500" placeholder="New session name..." style="background-color: var(--input-bg);"> <button id="save-session-btn" class="bg-blue-600 hover:bg-blue-700 text-white font-bold py-2 px-3 rounded-md text-xs transition-colors">Save</button> </div> 
              </div> 
          </div> 
+         </div> </details>
+             <details class="rounded-lg shadow-lg" style="background-color: var(--panel-bg);"> <summary class="p-4 font-semibold text-base" style="color: var(--text-color);">Live Haven Sessions</summary> <div class="p-4 border-t" style="border-color: var(--border-color);"> <ul id="haven-session-list" class="space-y-2 text-xs font-mono"></ul> </div> </details>
         </div>
         <div class="w-full md:w-3/4 rounded-lg shadow-lg p-6 flex flex-col min-h-0" style="background-color: var(--panel-bg);">
             <div class="flex justify-between items-center mb-4"> <h2 class="text-lg font-semibold" style="color: var(--text-color);"> </h2> <span id="session-name-display" class="text-sm font-mono px-2 py-1 rounded bg-gray-100 dark:bg-gray-700 text-gray-500 dark:text-gray-400">[New Session]</span> </div>
@@ -171,6 +172,7 @@
             const orchestratorText = document.getElementById('orchestrator-text');
             const agentStatus = document.getElementById('agent-status');
             const agentText = document.getElementById('agent-text');
+            const havenSessionList = document.getElementById('haven-session-list');
 
             const SERVER_URL = window.location.origin;
             const socket = io(SERVER_URL);
@@ -262,12 +264,19 @@
                 if (socket.connected) socket.emit('request_session_list'); 
             };
 
+            const requestHavenSessions = () => {
+                if (socket.connected) socket.emit('request_haven_sessions');
+            }
+
             socket.on('connect', () => {
                 logClientEvent("Socket.IO Event Received: connect", {}, "Client", null);
                 orchestratorStatus.className = 'w-3 h-3 rounded-full bg-green-500'; orchestratorText.textContent = 'Orchestrator Online';
                 agentStatus.className = 'w-3 h-3 rounded-full bg-green-500'; agentText.textContent = 'Agent Online';
                 requestSessionList(); 
+                requestHavenSessions();
                 logClientEvent("Socket.IO Emit: request_session_name", {}, "Client", "Request");
                 socket.emit('request_session_name');
             });
@@ -308,6 +317,17 @@
                 if (result?.status === 'success' && result.sessions) { result.sessions.forEach(session => { sessionList.add(new Option(session.name, session.name)); }); }\
             });
 
+            socket.on('haven_sessions_update', (result) => {
+                havenSessionList.innerHTML = '';
+                if (result?.status === 'success' && result.sessions) {
+                    if (result.sessions.length === 0) {
+                        havenSessionList.innerHTML = `<li class="italic text-gray-400">No active sessions in Haven.</li>`;
+                    } else {
+                        result.sessions.forEach(name => {
+                            havenSessionList.innerHTML += `<li class="text-gray-300">${name}</li>`;
+                        });
+                    }
+                }
+            });
+
             socket.on('session_name_update', (data) => {
                 logClientEvent("Socket.IO Event Received: session_name_update", {"data": data}, "Client", null);
                 currentSessionName = data.name || '[New Session]';